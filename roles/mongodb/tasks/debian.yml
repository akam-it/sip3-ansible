- name: "Installing"
  block:
    - name: "Add repositories"
      block:
        - name: "Install gnupg packages"
          apt:
            pkg:
              - gnupg
            update_cache: yes

        - name: "Add signing key for Mongo repository"
          apt_key:
            url: "https://www.mongodb.org/static/pgp/server-{{ mongodb.version }}.asc"
            state: present

        - name: "Add MongoDB repository"
          apt_repository:
            repo: deb http://repo.mongodb.org/apt/{{ ansible_facts['distribution'] | lower }} {{ ansible_facts['lsb']['codename'] }}/mongodb-org/{{ mongodb.version }} {% if ansible_facts['distribution'] == "Debian" %}main{% else %}multiverse{% endif %}
            state: present
            filename: mongodb-org-{{ mongodb.version }}

    - name: "Install the latest version of MongoDB"
      apt:
        pkg:
          - mongodb-org-server
          - mongodb-org-shell
        update_cache: yes
      notify:
        - restart mongod

    - name: "Creates directory {{ mongodb.path | default('/data/db') }} for MongoDB"
      file:
        path: "{{ mongodb.path | default('/data/db') }}"
        state: directory
        mode: 0755
        group: mongodb
        owner: mongodb
      notify:
        - restart mongod

    - name: "Create MongoDB config"
      template:
        src: "{{ item.name }}.j2"
        dest: "/{{ item.name }}"
        mode: "{{ item.mode }}"
        owner: "root"
        group: "root"
      loop:
        - { name: "etc/mongod.conf", mode: "0644" }
      notify:
        - restart mongod

    - name: "Create directory '/var/run/mongodb' for MongoDB"
      file:
        path: "/var/run/mongodb"
        state: directory
        mode: 0755
        group: mongodb
        owner: mongodb
      notify:
        - restart mongod

    - name: "Deploying MongoDB config for recreate /var/run/mongodb on tmpfs"
      copy:
        src: "{{ item.name }}"
        dest: "/{{ item.name }}"
        owner: "{{ item.ownership }}"
        group: "{{ item.ownership }}"
        mode: "0644"
        backup: "{{ item.backup }}"
      loop:
        - { name: "usr/lib/tmpfiles.d/mongodb.conf", ownership: "root", backup: "no" }
      notify:
        - restart mongod

    - name: "Start service MongoDB"
      systemd:
        name: mongod
        state: started
        daemon_reload: yes
        enabled: yes
  when: state == "started"

- name: "Uninstalling"
  block:
    - name: "Stop MongoDB"
      systemd:
        name: mongod
        state: stopped
        enabled: no

    - name: "Uninstall MongoDB"
      apt:
        pkg:
          - mongodb-org-server
          - mongodb-org-shell
        autoremove: yes
        state: absent

    - name: "Purge project files"
      block:
        - name: "Collecting project files"
          stat:
            path: "{{item}}"
          register: folder_stats
          with_items:
            - "{{ mongodb.path | default('/data/db') }}/"
        - name: "Delete project files"
          file:
            path: "{{ item.item }}"
            force: true
            state: absent
          when: item.stat.exists == true and item.stat.isdir == false
          with_items:
            - "{{folder_stats.results}}"
        - name: "Delete project folders"
          file:
            path: "{{ item.item }}"
            force: true
            state: absent
          when: item.stat.exists == true and item.stat.isdir == true
          with_items:
            - "{{folder_stats.results}}"
      ignore_errors: yes
  when: state == "absent"
